#! /usr/bin/env perl
#------------------------------------------------------------------------------
# Batch system directives
#------------------------------------------------------------------------------
#PBS  -N cam5_4_114_dart_wx_2010_august.st_archive
#PBS  -r n 
#PBS  -j oe 
#PBS  -m ae 
#PBS  -V 
#PBS  -S /bin/bash  
#PBS  -l select=1:ncpus=36:mpiprocs=36:ompthreads=1
##PBS  -l select=1:ncpus=1:mpiprocs=1
#PBS -l walltime=01:00
#PBS -q regular
#PBS -A P28100036 

use strict;
if(! -e "./xmlquery" and defined $ENV{'PBS_O_WORKDIR'})
{
	chdir $ENV{'PBS_O_WORKDIR'};
}

my $scriptname = $0;
my $caseroot = `./xmlquery -value CASEROOT`;
#my $cimeroot = `./xmlquery -value CIMEROOT`;
#my $cimeroot = "/glade/p/work/nickp/waccmx_edyn_op_cam5_4_48/cime/";
my $cimeroot = "/glade/u/home/nickp/waccmx_src/waccmx_edyn_op_cam5_4_48/cime/";

chdir $caseroot;
my $perl5lib = "$cimeroot/utils/perl5lib";
push(@INC, $perl5lib);
require Config::SetupTools;
require Batch::BatchUtils;
use Cwd;
require Log::Log4perl;

my $level = Log::Log4perl::Level::to_priority("INFO");
Log::Log4perl->easy_init({level=>$level,
			  layout=>'%m%n'});

my $logger = Log::Log4perl::get_logger();

# NMP hack to archive files
system("cp env_mach_pes.xml.archive env_mach_pes.xml");

#------------------------------------------------------------------------------
# PE Layout Documentation:
#------------------------------------------------------------------------------


# -------------------------------------------------------------------------
# global data needed by the script, stuff like the max number of threads,
# -------------------------------------------------------------------------

# First, get the configuration from every xml file.
my %config = SetupTools::getAllResolved();


my $testlog = "$config{CASEROOT}/TestStatus.log";
if(-e $testlog){
    open(TL,">>$testlog");
    print TL "st_archive starting\n";
    close(TL);
}
$logger->info("st_archive starting");
system("$config{CASEROOT}/st_archive >> stArchiveStatus 2>&1");
if(-e $testlog){
    open(TL,">>$testlog");
    print TL "st_archive complete\n";
    close(TL);
}
$logger->info("st_archive complete");

system("cp env_mach_pes.xml.save env_mach_pes.xml");

print TL "st_archive complete\n";
resubmitCheck();

sub resubmitCheck()
{
    if($config{RESUBMIT} > 0){
	my $submitscript = "$config{'CASEROOT'}/case.submit";
	my $cwd = getcwd;
	chdir $config{CASEROOT};
	my $resubmitcommand = "case.submit --resubmit";
	#my $resubmitcommand = "$submitscript  -resubmit -scriptname case.st_archive";
	$logger->debug( "running resubmit check $resubmitcommand");
	if(-e $testlog){
	    open(TL,">>$testlog");
	    print TL "running resubmit check $resubmitcommand\n";
	    close(TL);
	}
       system("module load python");
       system($resubmitcommand);
        if($?){ $logger->warn ("could not run CESM submit script, $! $?");}
	chdir $cwd;
    }
}
	
