Tue Sep 26 14:50:30 MDT 2017 -- BEGIN CAM_ASSIMILATE
HOSTNAME :: r12i2n31
LSB_SUB_RES_REQ: Undefined variable.
ls -d ../Hide*
ls -d ../Hide*
ls: cannot access ../Hide*: No such file or directory
if ( $status == 0 ) then
if ( 2 == 0 ) then


set log_list = `ls -t cesm.log.*`
set log_list = `ls -t cesm.log.*`
ls -t cesm.log.*
ls: cannot access cesm.log.*: No such file or directory
echo "log_list is $log_list"
echo log_list is 
log_list is 






if ( $#log_list > = 3 ) then
if ( 0 > = 3 ) then
unset echo
unset echo









set FILE = `head -n 1 rpointer.atm_0001`
set FILE = $FILE:r
set ATM_DATE_EXT = `echo $FILE:e`
set ATM_DATE = `echo $FILE:e | sed -e "s#-# #g"`
set ATM_YEAR = `echo $ATM_DATE[1] | bc`
set ATM_MONTH = `echo $ATM_DATE[2] | bc`
set ATM_DAY = `echo $ATM_DATE[3] | bc`
set ATM_SECONDS = `echo $ATM_DATE[4] | bc`
set ATM_HOUR = `echo $ATM_DATE[4] / 3600 | bc`

echo "valid time of model is $ATM_YEAR $ATM_MONTH $ATM_DAY $ATM_SECONDS (seconds)"
valid time of model is 2010 9 18 21600 (seconds)
echo "valid time of model is $ATM_YEAR $ATM_MONTH $ATM_DAY $ATM_HOUR (hours)"
valid time of model is 2010 9 18 6 (hours)





set temp_dir = assimilate_cam
echo "temp_dir is $temp_dir"
temp_dir is assimilate_cam

if ( -d $temp_dir ) then
${REMOVE} $temp_dir/*
else
cd $temp_dir








set YYYYMM = `printf %04d%02d                ${ATM_YEAR} ${ATM_MONTH}`
if ( ! -d ${BASEOBSDIR}/${YYYYMM}_6H ) then



set OBSFNAME = `printf obs_seq_allobs_%04d%02d%02d%02d.biasfix ${ATM_YEAR} ${ATM_MONTH} ${ATM_DAY} ${ATM_HOUR}`

set OBS_FILE = ${BASEOBSDIR}/${YYYYMM}_6H/${OBSFNAME}

echo "OBS_FILE = $OBS_FILE"
OBS_FILE = /glade/p/hao/nickp/dart_obs/saber_data/nsc_waccmx_dart/obs_seq_6hr_allobs//201009_6H/obs_seq_allobs_2010091806.biasfix

if ( -e ${OBS_FILE} ) then
${LINK} ${OBS_FILE} obs_seq.out
‘obs_seq.out’ -> ‘/glade/p/hao/nickp/dart_obs/saber_data/nsc_waccmx_dart/obs_seq_6hr_allobs//201009_6H/obs_seq_allobs_2010091806.biasfix’
else





echo "`date` -- BEGIN COPY BLOCK"
Tue Sep 26 14:50:32 MDT 2017 -- BEGIN COPY BLOCK

if ( -e ${CASEROOT}/input.nml ) then

sed -e "/#/d;/^!/d;/^[ ]*!/d" ${CASEROOT}/input.nml > ! input.nml || exit 39
else

echo "`date` -- END COPY BLOCK"
Tue Sep 26 14:50:32 MDT 2017 -- END COPY BLOCK





if ( $?TASKS_PER_NODE ) then
if ( $#TASKS_PER_NODE > 0 ) then
endif












set MYSTRING = `grep 'sampling_error_correction' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set MYSTRING = `echo $MYSTRING | sed -e 's#"# #g'`
set SECSTRING = `echo $MYSTRING[2] | tr '[:upper:]' '[:lower:]'`

if ( $SECSTRING == true ) then

echo "Sampling Error Correction not requested for this assimilation."
Sampling Error Correction not requested for this assimilation.
endif


















































set MYSTRING = `grep 'inf_flavor' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set PRIOR_INF = $MYSTRING[2]
set POSTE_INF = $MYSTRING[3]

set MYSTRING = `grep 'inf_initial_from_restart' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set PRIOR_TF = `echo $MYSTRING[2] | tr '[:upper:]' '[:lower:]'`
set POSTE_TF = `echo $MYSTRING[3] | tr '[:upper:]' '[:lower:]'`



set MYSTRING = `grep 'inf_in_file_name' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set MYSTRING = `echo $MYSTRING | sed -e 's#"# #g'`
set PRIOR_INF_IFNAME = $MYSTRING[2]
set POSTE_INF_IFNAME = $MYSTRING[3]

set MYSTRING = `grep 'inf_out_file_name' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set MYSTRING = `echo $MYSTRING | sed -e 's#"# #g'`
set PRIOR_INF_OFNAME = $MYSTRING[2]
set POSTE_INF_OFNAME = $MYSTRING[3]

set MYSTRING = `grep 'inf_diag_file_name' input.nml`
set MYSTRING = `echo $MYSTRING | sed -e "s#[=,'\.]# #g"`
set MYSTRING = `echo $MYSTRING | sed -e 's#"# #g'`
set PRIOR_INF_DIAG = $MYSTRING[2]
set POSTE_INF_DIAG = $MYSTRING[3]



if ( $PRIOR_INF > 0 ) then

if ( $PRIOR_TF == false ) then
if ( -e ../cam_inflation_cookie ) then


( ls -rt1 ../cam_${PRIOR_INF_OFNAME}.* | tail -n 1 > ! latestfile ) > & /dev/null
set nfiles = `cat latestfile | wc -l`


if ( $nfiles > 0 ) then
set latest = `cat latestfile`
${LINK} $latest ${PRIOR_INF_IFNAME}
‘prior_inflate_ics’ -> ‘../cam_prior_inflate_restart.2010-09-18-00000’
else

endif
else



if ( $POSTE_INF > 0 ) then

echo "Posterior Inflation       not requested for this assimilation."
Posterior Inflation       not requested for this assimilation.
endif


${REMOVE} ../cam_inflation_cookie
































echo "`date` -- BEGIN CAM-TO-DART"
Tue Sep 26 14:50:32 MDT 2017 -- BEGIN CAM-TO-DART








if ( $CAM_DYCORE == 'se' || $CAM_DYCORE == 'homme' ) then

set member = 1
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0001.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0001.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 1 at Tue Sep 26 14:50:32 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0002.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0002.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 2 at Tue Sep 26 14:50:33 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0003.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0003.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 3 at Tue Sep 26 14:50:34 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0004.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0004.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 4 at Tue Sep 26 14:50:35 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0005.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0005.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 5 at Tue Sep 26 14:50:35 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0006.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0006.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 6 at Tue Sep 26 14:50:36 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0007.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0007.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 7 at Tue Sep 26 14:50:37 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0008.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0008.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 8 at Tue Sep 26 14:50:37 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0009.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0009.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 9 at Tue Sep 26 14:50:38 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0010.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0010.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 10 at Tue Sep 26 14:50:39 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0011.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0011.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 11 at Tue Sep 26 14:50:40 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0012.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0012.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 12 at Tue Sep 26 14:50:40 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0013.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0013.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 13 at Tue Sep 26 14:50:41 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0014.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0014.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 14 at Tue Sep 26 14:50:42 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0015.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0015.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 15 at Tue Sep 26 14:50:42 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0016.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0016.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 16 at Tue Sep 26 14:50:43 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0017.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0017.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 17 at Tue Sep 26 14:50:44 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0018.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0018.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 18 at Tue Sep 26 14:50:44 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0019.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0019.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 19 at Tue Sep 26 14:50:45 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0020.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0020.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 20 at Tue Sep 26 14:50:46 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0021.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0021.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 21 at Tue Sep 26 14:50:46 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0022.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0022.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 22 at Tue Sep 26 14:50:47 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0023.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0023.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 23 at Tue Sep 26 14:50:48 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0024.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0024.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 24 at Tue Sep 26 14:50:49 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0025.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0025.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 25 at Tue Sep 26 14:50:49 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0026.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0026.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 26 at Tue Sep 26 14:50:50 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0027.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0027.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 27 at Tue Sep 26 14:50:51 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0028.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0028.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 28 at Tue Sep 26 14:50:51 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0029.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0029.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 29 at Tue Sep 26 14:50:52 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0030.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0030.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 30 at Tue Sep 26 14:50:53 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0031.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0031.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 31 at Tue Sep 26 14:53:44 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0032.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0032.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 32 at Tue Sep 26 14:53:45 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0033.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0033.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 33 at Tue Sep 26 14:53:46 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0034.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0034.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 34 at Tue Sep 26 14:53:46 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0035.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0035.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 35 at Tue Sep 26 14:53:47 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0036.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0036.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 36 at Tue Sep 26 14:53:48 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0037.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0037.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 37 at Tue Sep 26 14:53:48 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0038.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0038.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 38 at Tue Sep 26 14:53:49 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0039.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0039.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 39 at Tue Sep 26 14:53:50 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )




set MYTEMPDIR = member_${member}
mkdir -p $MYTEMPDIR
cd $MYTEMPDIR


$REMOVE output.${member}.cam_to_dart

set ATM_INITIAL_FILENAME = `printf ${CASE}.cam_%04d.i.${ATM_DATE_EXT}.nc  ${member}`
set ATM_HISTORY_FILENAME = `printf ${CASE}.cam_%04d.h0.${ATM_DATE_EXT}.nc ${member}`
set DART_IC_FILENAME = `printf filter_ics.%04d     ${member}`
set DART_RESTART_FILE = `printf filter_restart.%04d ${member}`

sed -e "s#dart_ics#../${DART_IC_FILENAME}#" -e "s#dart_restart#../${DART_RESTART_FILE}#" < ../input.nml > ! input.nml || exit 41

${LINK} ../../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0040.i.2010-09-18-21600.nc’
${LINK} ../../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../../cam5_4_114_dart_wx_nsc.damp.cam_0040.h0.2010-09-18-21600.nc’

if ( $CAM_DYCORE == 'se' ) then

echo "starting cam_to_dart for member ${member} at "`date`
starting cam_to_dart for member 40 at Tue Sep 26 14:53:51 MDT 2017

${EXEROOT}/cam_to_dart > ! output.${member}.cam_to_dart

cd ..

@ member++
end
while ( ${member} < = ${ensemble_size} )

wait
sleep 10

set nsuccess = `fgrep 'Finished ... at YYYY' member*/output.[0-9]*.cam_to_dart | wc -l`
if ( ${nsuccess} != ${ensemble_size} ) then

if ( $CAM_DYCORE == 'se' ) then

echo "`date` -- END CAM-TO-DART for all ${ensemble_size} members."
Tue Sep 26 14:54:01 MDT 2017 -- END CAM-TO-DART for all 40 members.


























set ATM_INITIAL_FILENAME = ${CASE}.cam_0001.i.${ATM_DATE_EXT}.nc
set ATM_HISTORY_FILENAME = ${CASE}.cam_0001.h0.${ATM_DATE_EXT}.nc

${LINK} ../$ATM_INITIAL_FILENAME caminput.nc
‘caminput.nc’ -> ‘../cam5_4_114_dart_wx_nsc.damp.cam_0001.i.2010-09-18-21600.nc’
${LINK} ../$ATM_HISTORY_FILENAME cam_phis.nc
‘cam_phis.nc’ -> ‘../cam5_4_114_dart_wx_nsc.damp.cam_0001.h0.2010-09-18-21600.nc’

echo "`date` -- BEGIN FILTER"
Tue Sep 26 14:54:01 MDT 2017 -- BEGIN FILTER


${LAUNCHCMD} ${EXEROOT}/filter || exit -7
 Starting program Filter
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2017  9 26 14 54  3
 Program Filter
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 PE 0: initialize_mpi_utilities:  Running with           72 MPI processes.
 PE 0: trans_coord CAM model version: 5.1.1
 PE 0: static_init_model CAM state vector size:   6962976
 PE 0: location_mod: using code with optimized cutoffs
 PE 0: location_mod: Including vertical separation when computing distances:
 PE 0: location_mod:        # pascals ~ 1 horiz radian:       20000.00000
 PE 0: location_mod:         # meters ~ 1 horiz radian:       10000.00000
 PE 0: location_mod:   # model levels ~ 1 horiz radian:          20.00000
 PE 0: location_mod:  # scale heights ~ 1 horiz radian:           1.50000
 PE 0: location_mod: Using table-lookup approximation for distance computations
 PE 0: order_state_fields State vector is composed of these fields:
 PE 0: order_state_fields PS
 PE 0: order_state_fields T
 PE 0: order_state_fields US
 PE 0: order_state_fields VS
 PE 0: order_state_fields Q
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 AIRCRAFT_TEMPERATURE
 ACARS_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 GPSRO_REFRACTIVITY
 SABER_TEMPERATURE
 AURAMLS_TEMPERATURE
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 PE 0: assim_tools_init: The cutoff namelist value is           0.150000
 PE 0: assim_tools_init: cutoff is the localization half-width parameter,
 PE 0: assim_tools_init: so the effective localization radius is           0.300000
 PE 0: filter trace: Filter start
 Filter start TIME: 2017/09/26 14:54:04
 PE 0: filter: running with an ensemble size of    40
 PE 0: filter trace: Before setting up space for observations
 Before setting up space for observations TIME: 2017/09/26 14:54:04
 After  setting up space for observations TIME: 2017/09/26 14:54:07
 PE 0: filter trace: After  setting up space for observations
 PE 0: filter trace: Before setting up space for ensembles
 PE 0: filter trace: After  setting up space for ensembles
 PE 0: filter trace: Before reading in ensemble restart files
 Before reading in ensemble restart files TIME: 2017/09/26 14:54:07
 PE 0: filter_read_restart: Reading in initial condition/restart data for all ensemble members from file(s)
 After  reading in ensemble restart files TIME: 2017/09/26 14:54:07
 PE 0: filter trace: After  reading in ensemble restart files
 PE 0: filter trace: Before initializing inflation
 PE 0: Prior inflation: both mean and sd read from this restart file: prior_inflate_ics
 PE 0: Prior inflation: deterministic, time-adaptive, spatially-varying, state-space
 PE 0: Prior inflation: inf mean   from restart file: min value:        1.000 max value:        8.004
 PE 0: Prior inflation: inf stddev from restart file: min value:        0.600 max value:        0.600
 PE 0: Posterior inflation: None
 PE 0: filter: Prior inflation damping of     0.700000 will be used
 PE 0: filter trace: After  initializing inflation
 PE 0: filter trace: Before initializing output files
 Before initializing output files TIME: 2017/09/26 14:54:07
 PE 0: init_diag_output  Prior_Diag.nc is ncFileID        65536
 PE 0: init_diag_output  Posterior_Diag.nc is ncFileID       131072
 After  initializing output files TIME: 2017/09/26 14:54:07
 PE 0: filter trace: After  initializing output files
 PE 0: filter: Will reject obs values more than    3.000000 sigma from mean
 PE 0: filter: Will reject obs with Data QC larger than    3
 PE 0: filter trace: Before trimming obs seq if start/stop time specified
 PE 0: filter trace: After  trimming obs seq if start/stop time specified
 PE 0: filter trace: Top of main advance time loop
 PE 0:  
 PE 0: filter: Main assimilation loop, starting iteration    0
 PE 0: filter trace: Before move_ahead checks time of data and next obs
 PE 0: move_ahead Current model data time            is:  day=  149644 sec= 21600
 PE 0: move_ahead Current assimilation window starts at:  day=  149644 sec= 10801
 PE 0: move_ahead Current assimilation window ends   at:  day=  149644 sec= 32400
 PE 0: move_ahead Next available observation time    is:  day=  149644 sec= 10818
 PE 0: move_ahead Within current assimilation window, model does not need advance.
 PE 0: move_ahead Next assimilation window contains up to   298279 observations
 PE 0: filter trace: After  move_ahead checks time of data and next obs
 PE 0: filter: Model does not need to run; data already at required time
 PE 0: filter trace: Before setup for next group of observations
 PE 0: filter trace: Number of observations to be assimilated 298279
 filter trace: Time of first observation in window day=149644, sec=10818
 filter trace: Time of last  observation in window day=149644, sec=32400
 PE 0: filter trace: After  setup for next group of observations
 PE 0: filter trace: Before prior inflation damping and prep
 PE 0: filter trace: After  prior inflation damping and prep
 PE 0: filter trace: Before computing prior observation values
 Before computing prior observation values TIME: 2017/09/26 14:54:11
 After  computing prior observation values TIME: 2017/09/26 14:58:25
 PE 0: filter trace: After  computing prior observation values
 PE 0: filter trace: Before prior state space diagnostics
 Before prior state space diagnostics TIME: 2017/09/26 14:58:25
 After  prior state space diagnostics TIME: 2017/09/26 14:58:30
 PE 0: filter trace: After  prior state space diagnostics
 PE 0: filter trace: Before observation space diagnostics
 PE 0: filter trace: After  observation space diagnostics
 PE 0: filter: Ready to assimilate up to  298279 observations
 PE 0: filter trace: Before observation assimilation
 Before observation assimilation TIME: 2017/09/26 14:58:31
 PE 0: comp_cov_factor: Standard Gaspari Cohn localization selected
Processing observation     10000  of   298279 TIME: 2017/09/26 14:58:42
Processing observation     20000  of   298279 TIME: 2017/09/26 14:58:51
Processing observation     30000  of   298279 TIME: 2017/09/26 14:58:57
Processing observation     40000  of   298279 TIME: 2017/09/26 14:59:07
Processing observation     50000  of   298279 TIME: 2017/09/26 14:59:15
Processing observation     60000  of   298279 TIME: 2017/09/26 14:59:22
Processing observation     70000  of   298279 TIME: 2017/09/26 14:59:31
Processing observation     80000  of   298279 TIME: 2017/09/26 14:59:39
Processing observation     90000  of   298279 TIME: 2017/09/26 14:59:44
Processing observation    100000  of   298279 TIME: 2017/09/26 14:59:54
Processing observation    110000  of   298279 TIME: 2017/09/26 15:00:01
Processing observation    120000  of   298279 TIME: 2017/09/26 15:00:01
Processing observation    130000  of   298279 TIME: 2017/09/26 15:00:01
Processing observation    140000  of   298279 TIME: 2017/09/26 15:00:01
Processing observation    150000  of   298279 TIME: 2017/09/26 15:00:07
Processing observation    160000  of   298279 TIME: 2017/09/26 15:00:18
Processing observation    170000  of   298279 TIME: 2017/09/26 15:00:25
Processing observation    180000  of   298279 TIME: 2017/09/26 15:00:28
=>> PBS: job killed: walltime 602 exceeded limit 600
forrtl: error (78): process killed (SIGTERM)
Image              PC                Routine            Line        Source             
filter             0000000000604995  Unknown               Unknown  Unknown
filter             00000000006025B7  Unknown               Unknown  Unknown
filter             00000000005AC1A4  Unknown               Unknown  Unknown
filter             00000000005ABFB6  Unknown               Unknown  Unknown
filter             0000000000539756  Unknown               Unknown  Unknown
filter             000000000053F50E  Unknown               Unknown  Unknown
libpthread.so.0    00002AAAABF30870  Unknown               Unknown  Unknown
libmpi.so          00002AAAAC5B06EF  Unknown               Unknown  Unknown
forrtl: error (78): process killed (SIGTERM)
Image              PC                Routine            Line        Source             
filter             0000000000604995  Unknown               Unknown  Unknown
filter             00000000006025B7  Unknown               Unknown  Unknown
filter             00000000005AC1A4  Unknown               Unknown  Unknown
filter             00000000005ABFB6  Unknown               Unknown  Unknown
filter             0000000000539756  Unknown               Unknown  Unknown
filter             000000000053F50E  Unknown               Unknown  Unknown
libpthread.so.0    00002AAAABF30870  Unknown               Unknown  Unknown
libmpi.so          00002AAAAC5ADDC5  Unknown               Unknown  Unknown
forrtl: error (78): process killed (SIGTERM)
Image              PC                Routine            Line        Source             
filter             0000000000604995  Unknown               Unknown  Unknown
filter             00000000006025B7  Unknown               Unknown  Unknown
filter             00000000005AC1A4  Unknown               Unknown  Unknown
filter             00000000005ABFB6  Unknown               Unknown  Unknown
filter             0000000000539756  Unknown               Unknown  Unknown
filter             000000000053F50E  Unknown               Unknown  Unknown
libpthread.so.0    00002AAAABF30870  Unknown               Unknown  Unknown
libmpi.so          00002AAAAC59A8D7  Unknown               Unknown  Unknown
MPT ERROR: MPI_COMM_WORLD rank 71 has terminated without calling MPI_Finalize()
	aborting job
