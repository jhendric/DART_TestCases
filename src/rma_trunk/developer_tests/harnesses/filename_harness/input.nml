&assim_model_nml
   write_binary_restart_files = .true.,
   netCDF_large_file_support  = .false.
  /


# With a deterministic filter (filter_kind == 1 or 8)
# and a deterministic inflation (filter_nml:inf_deterministic == .true.)
# sort_obs_inc is not needed and is expensive. Should be .false.

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.2,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   adaptive_cutoff_floor           = -1.0,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = "localization_diagnostics",
   print_every_nth_obs             = 0,
   rectangular_quadrature          = .true.,
   gaussian_likelihood_tails       = .false.,
   close_obs_caching               = .true.,
   allow_missing_in_clm            = .false.
/

# specify these in the same order, the same number of items
#   special_localization_obs_types  = "",
#   special_localization_cutoffs    = -1,

&cov_cutoff_nml
   select_localization = 1  /

&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .true.,
   perturbation_amplitude  = 0.2,
   layout = 1,
   tasks_per_node = 1,
   communication_configuration = 1,
   flag_unneeded_transposes = .false.,
   debug = .false.
 /

&location_nml
   horiz_dist_only                 = .true.,
   vert_normalization_pressure     = 100000.0, 
   vert_normalization_height       = 10000.0,
   vert_normalization_level        = 20.0,
   vert_normalization_scale_height = 5.0,
   approximate_distance            = .false.,
   nlon                            = 71,
   nlat                            = 36,
   output_box_info                 = .false.,
   special_vert_normalization_obs_types     = ''
   special_vert_normalization_pressures     = 100000.0
   special_vert_normalization_heights       = 10000.0
   special_vert_normalization_levels        = 20.0
   special_vert_normalization_scale_heights = 5.0
/


# Notes for model_nml:
# (1) vert_localization_coord must be one of:
#     1 = model level
#     2 = pressure
#     3 = height
# (2) see bottom of this file for explanations of polar, periodic_x, 
#     periodic_y, and scm
# (3) calendar = 3 is GREGORIAN, which is what WRF uses.
# (4) if 'default_state_variables' is .true. the model_mod.f90 code will
#     fill the state variable table with the following wrf vars: 
#        U, V, W, PH, T, MU
#     you must set it to false before you change the value 
#     of 'wrf_state_variables' and have it take effect.
# (5) the format for 'wrf_state_variables' is an array of 5 strings:
#     wrf netcdf variable name, dart QTY_xxx string, type string (must be 
#     unique, will soon be obsolete, we hope), 'UPDATE', and '999' if the 
#     array is part of all domains.  otherwise, it is a string with the domain
#     numbers (e.g. '12' for domains 1 and 2, '13' for domains 1 and 3).
#   example:
# wrf_state_variables='U','QTY_U_WIND_COMPONENT','TYPE_U','UPDATE','999',
#                     'V','QTY_V_WIND_COMPONENT','TYPE_V','UPDATE','999',
#                     'W','QTY_VERTICAL_VELOCITY','TYPE_W','UPDATE','999',
#                     'T','QTY_POTENTIAL_TEMPERATURE','TYPE_T','UPDATE','999',
#                     'PH','QTY_GEOPOTENTIAL_HEIGHT','TYPE_GZ','UPDATE','999',
#                     'MU','QTY_PRESSURE','TYPE_MU','UPDATE','999',
#                     'QVAPOR','QTY_VAPOR_MIXING_RATIO','TYPE_QV','UPDATE','999',
#                     'QCLOUD','QTY_CLOUD_LIQUID_WATER','TYPE_QC','UPDATE','999',
#                     'QRAIN','QTY_RAINWATER_MIXING_RATIO','TYPE_QR','UPDATE','999',
#                     'U10','QTY_U_WIND_COMPONENT','TYPE_U10','UPDATE','999',
#                     'V10','QTY_V_WIND_COMPONENT','TYPE_V10','UPDATE','999',
#                     'T2','QTY_TEMPERATURE','TYPE_T2','UPDATE','999',
#                     'TH2','QTY_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
#                     'Q2','QTY_SPECIFIC_HUMIDITY','TYPE_Q2','UPDATE','999',
#                     'PSFC','QTY_PRESSURE','TYPE_PS','UPDATE','999',
# (6) the format for 'wrf_state_bounds' is an array of 4 strings:
#     wrf netcdf variable name, minimum value, maximum value, and either
#     FAIL or CLAMP.  FAIL will halt the program if an out of range value
#     is detected.  CLAMP will set out of range values to the min or max.
#     The special string 'NULL' will map to plus or minus infinity and will
#     not change the values.  arrays not listed in this table will not
#     be changed as they are read or written.


&model_nml
   default_state_variables     = .true.,
   wrf_state_variables         = 'NULL',
   wrf_state_bounds            = 'NULL',
   num_domains                 = 1,
   output_state_vector         = .false.,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   allow_obs_below_vol         = .false.,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
   sfc_elev_max_diff           = -1.0,
   polar                       = .false.,
   periodic_x                  = .false.,
   periodic_y                  = .false.,
   scm                         = .false.  /

# polar and periodic_x are used in global wrf.  if polar is true, the 
# grid interpolation routines will wrap over the north & south poles.  
# if periodic_x is true, when the east and west edges of the grid are
# reached the interpolation will wrap.  note this is a separate issue
# from regional models which cross the GMT line; those grids are marked
# as having a negative offset and do not need to wrap; this flag controls
# what happens when the edges of the grid are reached.

# the scm flag is used for the 'single column model' version of WRF.
# it needs the periodic_x and periodic_y flags set to true, in which
# case the X and Y directions are periodic; no collapsing of the grid
# into a single location like the 3d-spherical polar flag implies.

&mpi_utilities_nml
   reverse_task_layout = .false., 
   all_tasks_print     = .false., 
   verbose             = .false., 
   async2_verbose      = .false., 
   async4_verbose      = .false., 
   shell_name          = '',
   separate_node_sync  = .false.,
   create_local_comm   = .true.,
   /

&obs_kind_nml
   assimilate_these_obs_types = 'null',
   evaluate_these_obs_types   = 'null'  
/


&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"  /

&smoother_nml
   num_lags              = 0,
   start_from_restart    = .false.,
   output_restart        = .false.,
   restart_in_file_name  = 'ics',
   restart_out_file_name = 'restart'  /

&utilities_nml
   TERMLEVEL      = 1,
   logfilename    = 'dart_log.out',
   nmlfilename    = 'dart_log.nml',
   module_details = .true.,
   print_debug    = .false.,
   write_nml      = 'file'
/

