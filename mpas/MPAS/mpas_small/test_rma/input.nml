&filter_nml
   async                    = 2,
   adv_ens_command          = "./advance_model.csh",
   ens_size                 = 3,
   obs_sequence_in_name     = "obs_seq.1800obs",
   obs_sequence_out_name    = "obs_seq.final",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 3,
   num_output_obs_members   = 3,
   output_interval          = 1,
   num_groups               = 1,
   output_forward_op_errors = .false.,
   output_timestamps        = .true.,
   trace_execution          = .true.,
   input_state_file_list    = "restart_files_in.txt", 
   output_state_file_list   = "restart_files_out.txt"
   single_file_in           = .false.,
   single_file_out          = .false.,
   perturb_from_single_instance  = .false.,
   perturbation_amplitude        = 0.2,

   inf_flavor                  = 2,                       0,
   inf_initial_from_restart    = .false.,                .false.,
   inf_sd_initial_from_restart = .false.,                .false.,
   inf_deterministic           = .true.,                  .true.,
   inf_initial                 = 1.0,                     1.0,
   inf_sd_initial              = 0.6,                     0.6,
   inf_damping                 = 0.9,                     0.9,
   inf_lower_bound             = 1.0,                     1.0,
   inf_upper_bound             = 1000.0,                  1000.0,
   inf_sd_lower_bound          = 0.6,                      0.6
/

&smoother_nml
   num_lags              = 0
   start_from_restart    = .true.,
   output_restart        = .false.
   restart_in_file_name  = 'smoother_ics'
   restart_out_file_name = 'smoother_restart' /

&ensemble_manager_nml
   layout = 1
   tasks_per_node = 16
/

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                      = 0.10,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000 /

&cov_cutoff_nml
   select_localization = 1  /

&reg_factor_nml
   select_regression = 1,
   input_reg_file = "time_mean_reg" 
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = 'reg_diagnostics' /

&obs_sequence_nml
   write_binary_obs_sequence = .true.  /

&obs_sequence_tool_nml
   filename_seq         = 'obs_seq.final',
   filename_out         = 'obs_seq.final.raobT.ascii',
   num_input_files      = 1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   obs_types            = 'RADIOSONDE_TEMPERATURE',
   keep_types           = .true.,
   print_only           = .false.,
   gregorian_cal        = .true., /

&obs_def_gps_nml
   max_gpsro_obs = 1000000  /

&obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                'RADIOSONDE_DEWPOINT',
                                'RADIOSONDE_U_WIND_COMPONENT',
                                'RADIOSONDE_V_WIND_COMPONENT',
                                'RADIOSONDE_SURFACE_ALTIMETER' ,
                                'ACARS_TEMPERATURE',
                                'ACARS_U_WIND_COMPONENT',
                                'ACARS_V_WIND_COMPONENT',
                                'SAT_U_WIND_COMPONENT',
                                'SAT_V_WIND_COMPONENT' ,
                                'GPSRO_REFRACTIVITY' ,
                                'LAND_SFC_ALTIMETER' ,
                                'METAR_TEMPERATURE_2_METER' ,
                                'METAR_U_10_METER_WIND' ,
                                'METAR_V_10_METER_WIND' ,
                                'METAR_DEWPOINT_2_METER',
                                'METAR_ALTIMETER' ,
                                'MARINE_SFC_TEMPERATURE' ,
                                'MARINE_SFC_U_WIND_COMPONENT' ,
                                'MARINE_SFC_V_WIND_COMPONENT' ,
                                'MARINE_SFC_DEWPOINT',
                                'MARINE_SFC_ALTIMETER' ,
                                'PROFILER_U_WIND_COMPONENT' ,
                                'PROFILER_V_WIND_COMPONENT' ,
   evaluate_these_obs_types = 'RADIOSONDE_SPECIFIC_HUMIDITY',
                              'RADIOSONDE_RELATIVE_HUMIDITY',
                              'MARINE_SFC_SPECIFIC_HUMIDITY' ,
                              'MARINE_SFC_RELATIVE_HUMIDITY' ,
                              'METAR_SPECIFIC_HUMIDITY_2_METER',
                              'LAND_SFC_DEWPOINT',
                              'GPS_PRECIPITABLE_WATER' /

&assim_model_nml
   netCDF_large_file_support  = .true.,
/

&model_nml
   grid_definition_filename     = 'x1.40962.mesh.nc',
   model_analysis_filename      = 'x1.40962.restart.nc',
   highest_obs_pressure_mb      = 100.0,
   vert_localization_coord      = 3,
   log_p_vert_interp            = .false.,
   sfc_elev_max_diff            = 100.,
   assimilation_period_days     = 0,
   assimilation_period_seconds  = 21600,
   model_perturbation_amplitude = 0.0001,
   calendar                     = 'Gregorian',
   debug                        = 0,
   use_u_for_wind               = .false.,
   use_rbf_option               = 2,
   update_u_from_reconstruct    = .false.,
   use_increments_for_u_update  = .true.,
   /

!integer, parameter :: VERTISUNDEF       = -2 ! has no vertical location (undefined)
!integer, parameter :: VERTISSURFACE     = -1 ! surface value
!integer, parameter :: VERTISLEVEL       =  1 ! by level
!integer, parameter :: VERTISPRESSURE    =  2 ! by pressure
!integer, parameter :: VERTISHEIGHT      =  3 ! by height
!integer, parameter :: VERTISSCALEHEIGHT =  4 ! by scale height

&mpas_vars_nml
   mpas_state_variables = 'theta',                 'QTY_POTENTIAL_TEMPERATURE',
                          'uReconstructZonal',     'QTY_U_WIND_COMPONENT',
                          'uReconstructMeridional','QTY_V_WIND_COMPONENT',
                          'rho',                   'QTY_DENSITY',
                          'w',                     'QTY_VERTICAL_VELOCITY',
                          'surface_pressure',      'QTY_SURFACE_PRESSURE'
                          'qv',                    'QTY_VAPOR_MIXING_RATIO',
                          'qc',                    'QTY_CLOUDWATER_MIXING_RATIO',
                          'qr',                    'QTY_RAINWATER_MIXING_RATIO',
                          'qi',                    'QTY_ICE_MIXING_RATIO',
                          'qs',                    'QTY_SNOW_MIXING_RATIO',
                          'qg',                    'QTY_GRAUPEL_MIXING_RATIO'
                          'u10',                   'QTY_U_WIND_COMPONENT'
                          'v10',                   'QTY_V_WIND_COMPONENT'
                          't2m',                   'QTY_TEMPERATURE'
                          'th2m',                  'QTY_POTENTIAL_TEMPERATURE'
                          'q2',                    'QTY_SPECIFIC_HUMIDITY'
                          'precipw',               'QTY_PRECIPITABLE_WATER'
   mpas_state_bounds    = 'qv','0.0','NULL','CLAMP',
                          'qc','0.0','NULL','CLAMP',
                          'qr','0.0','NULL','CLAMP',
                          'qi','0.0','NULL','CLAMP',
                          'qs','0.0','NULL','CLAMP',
                          'qg','0.0','NULL','CLAMP',
                          'precipw','0.0','NULL','CLAMP',
   /

&model_to_dart_nml
   model_to_dart_output_file  = 'dart.ud',
  /

&dart_to_model_nml
   dart_to_model_input_file = 'dart.ic',
   advance_time_present     = .false.,
  /

&location_nml
   horiz_dist_only             = .false.,
   vert_normalization_pressure = 50000.0, 
   vert_normalization_height = 30000.0,
   vert_normalization_level = 20.0,
   approximate_distance = .false.,
   nlon = 71, 
   nlat = 36,
   output_box_info  = .false.  /

&utilities_nml
   TERMLEVEL = 1,
   logfilename    = 'dart_log.out'  
   nmlfilename    = 'dart_log.nml',
   module_details = .false.,
   print_debug    = .false.  /

&preprocess_nml
    input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
   input_files              = '../../../observations/forward_operators/obs_def_reanalysis_bufr_mod.f90',
                              '../../../observations/forward_operators/obs_def_altimeter_mod.f90',
                              '../../../observations/forward_operators/obs_def_gts_mod.f90',
                              '../../../observations/forward_operators/obs_def_metar_mod.f90',
                              '../../../observations/forward_operators/obs_def_rel_humidity_mod.f90',
                              '../../../observations/forward_operators/obs_def_dew_point_mod.f90',
                              '../../../observations/forward_operators/obs_def_gps_mod.f90'  /

&mpi_utilities_nml
   /

&restart_file_utility_nml

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, 360]

&obs_diag_nml
  obs_sequence_list = 'obsflist',
   obs_sequence_name = '',
   first_bin_center =  2012, 5,25, 0, 0, 0 ,
   last_bin_center  =  2012, 6,25, 0, 0, 0 ,
   bin_separation   =     0, 0, 0, 6, 0, 0 ,
   bin_width        =     0, 0, 0, 6, 0, 0 ,
   time_to_skip     =     0, 0, 7, 0, 0, 0 ,
   max_num_bins  = 1000,
   Nregions   = 4,
   lonlim1    = 235.0,   0.0,   0.0,   0.0,
   lonlim2    = 280.0, 360.0, 360.0, 360.0,
   latlim1    =  20.0, -80.0, -20.0, -90.0,
   latlim2    =  60.0, -20.0,  20.0,  90.0,
   reg_names  = 'CONUS', 'Southern Hemisphere', 'Tropics', 'Globe',
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   print_mismatched_locs = .false.,
   print_obs_locations   = .false.,
   verbose = .false.  /

&schedule_nml
   calendar        = 'Gregorian',  
   first_bin_start =  2008, 1,17, 0, 0, 0 ,
   first_bin_end   =  2008, 1,18, 0, 0, 0 ,
   last_bin_end    =  2008, 1,18, 0, 0, 0 ,
   bin_interval_days    = 0,   
   bin_interval_seconds = 86400,   
   max_num_bins         = 1000,
   print_table          = .true.,
   /
   
&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.out',
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.,
   /

&perfect_model_obs_nml
   async                  = 2,
   adv_ens_command        = "./advance_model.csh",
   obs_seq_in_file_name   = "obs_seq.in",
   obs_seq_out_file_name  = "obs_seq.out",
   start_from_restart       = .true.,
   output_restart         = .true.,
   restart_in_file_name   = "perfect_ic_old",
   restart_out_file_name  = "perfect_ic_new",
   init_time_days           = -1,
   init_time_seconds        = -1,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   output_interval        = 1  /

&xyz_location_nml
   use_octree = .false.,
   nx  = 20,
   ny  = 20,
   nz  = 20,
   /
 
&state_vector_io_nml
/

&quality_control_nml
   input_qc_threshold       = 3.0,
   outlier_threshold        = 3.0,
/

&state_space_diag_nml
   single_file           = .true.
   make_diagnostic_files = .true.
/
